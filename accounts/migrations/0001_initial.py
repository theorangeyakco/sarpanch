# Generated by Django 3.1 on 2021-01-15 17:57

import django.core.validators
from django.db import migrations, models
import django.utils.timezone
import sarpanch.media_storages


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='PhoneOTP',
            fields=[
                ('phone', models.CharField(max_length=17, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 14 digits allowed.", regex='^\\+?1?\\d{9,14}$')])),
                ('otp', models.CharField(blank=True, max_length=9, null=True)),
                ('count', models.PositiveSmallIntegerField(default=0, help_text='Number of OTPs sent')),
                ('validated', models.BooleanField(default=False)),
                ('forgot', models.BooleanField(default=False, help_text='only true for forgot password')),
                ('forgot_logged', models.BooleanField(default=False, help_text='Only true if validate otp forgot is successful')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, verbose_name='Email Address')),
                ('name', models.CharField(max_length=128, verbose_name='Full Name')),
                ('avatar', models.ImageField(blank=True, null=True, storage=sarpanch.media_storages.PrivateMediaStorage(), upload_to='user_data/avatars')),
                ('gender', models.CharField(blank=True, choices=[(None, ''), ('M', 'Male'), ('F', 'Female'), ('T', 'Transgender'), ('O', 'Other'), ('N', 'Prefer not say')], max_length=32, null=True, verbose_name='Gender')),
                ('notification_level', models.IntegerField(choices=[(0, 'Disable All Notifications'), (1, 'Email me only when its critical'), (2, 'Email me reminders and updates'), (3, 'Email me some promotions'), (4, 'Keep all notifications on')], default='4', verbose_name='Notification Level')),
                ('phone', models.CharField(max_length=17, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 14 digits allowed.", regex='^\\+?1?\\d{9,14}$')])),
                ('username', models.CharField(blank=True, max_length=32, null=True, unique=True)),
                ('first_login', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active.', verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
